---
description: 
globs: 
alwaysApply: false
---
Please analyze the following directories in my project:
- /bots
- /scripts
- /functional
- /helpers
- /suites
- /.github/workflows

For each directory, create or update the README.md file with a comprehensive overview that follows this pattern:

1. Start with a clear title using an emoji that represents the directory's purpose
2. Provide a concise introduction explaining the directory's purpose
3. Include a "Quick reference" table with columns for files/modules, purpose, and key features
4. Add a "Usage" section with code examples when applicable
5. Create detailed sections for each major file/component with:
   - Code snippets demonstrating usage
   - Key features in bullet points
   - Configuration options if applicable
6. Add sections for configuration, best practices, and monitoring where relevant

Make the README.md content similar in style and format to this example:

```markdown
# ü§ñ XMTP Test Bots

This directory contains test bots for the XMTP protocol. These bots help validate the functionality of XMTP, automate testing scenarios, and provide interactive agents for development purposes.

## Quick reference

| Bot         | Purpose                     | Key Features                             |
| ----------- | --------------------------- | ---------------------------------------- |
| **agents/** | AI-powered personality bots | GPT integration, persistent identities   |
| **gm-bot/** | Simple greeting bot         | Basic response, standalone deployment    |
| **simple/** | Diagnostics bot             | Identity info, conversation details      |
| **stress/** | Load testing bot            | Group scaling, performance benchmarking  |
| **test/**   | Command-based testing bot   | Test automation, conversation management |

## Usage

You can run these bots using the yarn commands defined in package.json:

```bash
# Run the GM bot
yarn bot gm
```

## üß† AI Agents

The `agents` bot provides AI-powered chat personalities using GPT integration.

```typescript
// Initialize multiple agent personalities
const workersGpt = await getWorkers(
  ["sam", "tina", "walt"],
  testName,
  "message",
  "gpt"
);
```

**Key features:**
- Persistent GPT-powered personalities
- Multiple character identities
- Natural language interaction
- Automatic message streaming

## üìù Best practices

When using these test bots, consider the following best practices:

1. **Environment configuration:** Set proper environment variables for network and logging
2. **Error handling:** Add error reporting to catch and log failures
3. **Resource management:** Close streams and clients properly when shutting down
4. **Identity management:** Use appropriate wallet keys for different environments
5. **Network selection:** Choose the appropriate XMTP network (dev, production) for testing
```

Process each directory thoroughly, analyzing all subdirectories and files to create accurate and helpful documentation. Do not ask for clarification - use your best judgment based on file contents, directory structure, and filename patterns. Be creative in generating useful examples where direct code is not available. Deliver all README updates in a single response.