name: TS_Delivery
description: "should verify message loss when receiving via 200 streams"

on:
  schedule:
    - cron: "*/40 * * * *" # every 40 min
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      LOGGING_LEVEL: ${{ vars.LOGGING_LEVEL }}
      XMTP_ENV: ${{ vars.XMTP_ENV }}
      GEOLOCATION: ${{ vars.GEOLOCATION }}
      DELIVERY_AMOUNT: ${{ vars.DELIVERY_AMOUNT }}
      DELIVERY_RECEIVERS: ${{ vars.DELIVERY_RECEIVERS }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - name: Ensure data folder exists
        run: mkdir -p .data
      - name: List data folder contents
        run: ls -la .data
      - run: corepack enable
      - run: yarn
      - name: Run tests with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i..."
            # Add environment variable for Rust backtrace
            export RUST_BACKTRACE=1
            # Run the test with more verbose output
            yarn test TS_Delivery --verbose
            exit_code=$?
            if [ $exit_code -eq 0 ]; then
              echo "Tests passed successfully!"
              break
            fi
            echo "Test failed with exit code $exit_code. Retrying in 30 seconds..."
            # Increase sleep time to allow for potential network/service recovery
            sleep 30
            # Force garbage collection before next attempt
            node --expose-gc -e "global.gc()"
          done
      - name: Upload log files
        uses: actions/upload-artifact@v4
        with:
          name: delivery-logs
          path: logs/ts-delivery.log
