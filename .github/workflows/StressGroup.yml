name: GroupStress
description: Check that group stress testing is working correctly. If it fails notify the team.

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production]
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      LOGGING_LEVEL: "debug"
      XMTP_ENV: ${{ matrix.environment }}
      GEOLOCATION: ${{ vars.GEOLOCATION }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      WALLET_KEY: ${{ secrets.WALLET_KEY }}
      GROUP_ID: 376c0cd8dc326d38dd3e26eacb05f153
      WALLET_KEY_BOT: "0x9e30e21fab8102a344b3c8db3a52e417a3985b626c865f596f0462840180533a"
      ENCRYPTION_KEY_BOT: "aafac8e206e6abe09ad0b696dfd86977edd25cfc04578b793c0e912b742d1462"
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL || 'xmtp-qa' }}
    steps:
      - uses: actions/checkout@v4
      # Create cache date key - refresh cache monthly
      - name: Get date for cache key
        id: date
        run: echo "date=$(date +%Y-%m)" >> $GITHUB_OUTPUT

      # Restore cached .data folder with better fallback strategy
      - name: Restore .data cache
        uses: actions/cache@v4
        id: data-cache
        with:
          path: |
            .data
            logs
          key: stress-group-data-${{ matrix.environment }}-${{ steps.date.outputs.date }}-${{ github.run_id }}
          restore-keys: |
            stress-group-data-${{ matrix.environment }}-${{ steps.date.outputs.date }}-
            stress-group-data-${{ matrix.environment }}-
            stress-group-data-

      # Debug cache status
      - name: Check cache status
        run: |
          echo "Cache hit: ${{ steps.data-cache.outputs.cache-hit }}"
          echo "Cache primary key: stress-group-data-${{ matrix.environment }}-${{ steps.date.outputs.date }}-${{ github.run_id }}"
          if [ -d ".data" ]; then
            echo "Found existing .data directory:"
            find .data -type f | head -10
          else
            echo "No .data directory found - will be created fresh"
          fi

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Run tests
        run: yarn retry suites/stress/group-stress/group-stress.test.ts

      # Debug what was created during test run
      - name: Show created data
        if: always()
        run: |
          echo "=== Data directories created during test ==="
          if [ -d ".data" ]; then
            echo "Contents of .data directory:"
            find .data -type f | head -20
            echo "Directory sizes:"
            du -sh .data/* 2>/dev/null || echo "No subdirectories in .data"
          else
            echo "No .data directory created"
          fi

          if [ -d "logs" ]; then
            echo "Contents of logs directory:"
            find logs -type f | head -10
          else
            echo "No logs directory created"
          fi

      # Save cache explicitly (in case job fails)
      - name: Save .data cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            .data
            logs
          key: stress-group-data-${{ matrix.environment }}-${{ steps.date.outputs.date }}-${{ github.run_id }}

      - name: Send Slack notification
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        run: npx tsx helpers/slack.ts
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.workflow }}-${{ matrix.environment }}
          path: |
            logs/**/*
            .data/**/*
            .env
          if-no-files-found: ignore
          overwrite: true
          include-hidden-files: true
          retention-days: 90
