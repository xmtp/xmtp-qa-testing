name: Package Manager Compatibility Test

on:
  push:
    branches: [main, master]
    paths:
      - "bots/gm-bot/**"
  pull_request:
    branches: [main, master]
    paths:
      - "bots/gm-bot/**"
  workflow_dispatch:

jobs:
  test-package-managers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install package managers
        run: |
          # Install required package managers
          npm install -g yarn
          npm install -g pnpm@latest
          curl -fsSL https://bun.sh/install | bash

          # Source bashrc to make bun available
          source ~/.bashrc

          # Determine paths
          NPM_GLOBAL_PATH="$(npm config get prefix)/bin"
          BUN_PATH="$HOME/.bun/bin"

          # Export paths to GITHUB_PATH (preferred over GITHUB_ENV for PATH modifications)
          echo "$NPM_GLOBAL_PATH" >> $GITHUB_PATH
          echo "$BUN_PATH" >> $GITHUB_PATH

          # Create PNPM_HOME dir and configure it
          export PNPM_HOME="$HOME/.local/share/pnpm"
          mkdir -p "$PNPM_HOME"
          echo "$PNPM_HOME" >> $GITHUB_PATH

          # Add PNPM to current session PATH
          export PATH="$NPM_GLOBAL_PATH:$BUN_PATH:$PNPM_HOME:$PATH"

          # Set up PNPM properly
          pnpm setup

          # Verify installations
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)" 
          echo "Yarn version: $(yarn --version)"
          echo "PNPM version: $(pnpm --version || echo 'Not available')"
          echo "Bun version: $(bun --version || echo 'Not available')"

      - name: Run package manager tests
        run: |
          # Source bashrc again to ensure all paths are available
          source ~/.bashrc

          # Verify package managers are available
          echo "Checking package managers:"
          which npm || echo "npm not found"
          which yarn || echo "yarn not found"
          which pnpm || echo "pnpm not found"
          which bun || echo "bun not found"

          # Create a symlink to ensure pnpm is found where expected
          if [ ! -d "$HOME/.local/share/pnpm" ] && which pnpm; then
            mkdir -p "$HOME/.local/share/pnpm"
            ln -sf "$(which pnpm)" "$HOME/.local/share/pnpm/pnpm"
            export PATH="$HOME/.local/share/pnpm:$PATH"
          fi

          # Final verification
          which pnpm || echo "pnpm still not found after symlink"

          # Run your test script
          chmod +x ./scripts/packages.sh
          ./scripts/packages.sh
