name: TS_Agents
description: "should verify health of agents"

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "10 * * * *" # Runs at 10 minutes past each hour
  workflow_dispatch:

jobs:
  TS_Agents:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production]
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      LOGGING_LEVEL: ${{ vars.LOGGING_LEVEL }}
      XMTP_ENV: ${{ matrix.environment }}
      GEOLOCATION: ${{ vars.GEOLOCATION }}
      DELIVERY_AMOUNT: ${{ vars.DELIVERY_AMOUNT }}
      DELIVERY_RECEIVERS: ${{ vars.DELIVERY_RECEIVERS }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL || 'xmtp-qa' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn
      - name: Make test script executable
        run: chmod +x ./scripts/run-test.sh
      - name: Run tests with retry
        run: yarn test ts_agents
      - name: Send Slack notification
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        run: npx tsx helpers/slack.ts
      - name: Upload reports and snapshots artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TS_Agents_${{ matrix.environment }}
          path: |
            logs/
