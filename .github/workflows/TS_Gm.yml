name: TS_Gm
description: "should verify performance of the library in the dev network"

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: Dev
    # Your existing test job configuration...

  report-to-datadog:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Debug secret availability
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Datadog API key is available (value hidden)"
          else
            echo "ERROR: Datadog API key is NOT available"
          fi

      - name: Send workflow status to Datadog
        run: |
          STATUS="${{ needs.test.result }}"
          WORKFLOW="TS_Gm"
          ENV="Dev"
          API_KEY="${{ secrets.DATADOG_API_KEY }}"

          # Debug API key presence (without revealing it)
          if [ -z "$API_KEY" ]; then
            echo "WARNING: Datadog API key is empty"
          else
            echo "Datadog API key is available (value hidden)"
          fi

          ALERT_TYPE="info"

          if [ "$STATUS" == "success" ]; then
            ALERT_TYPE="success"
            TITLE="GitHub Workflow $WORKFLOW Succeeded"
            TEXT="GitHub workflow $WORKFLOW completed successfully in $ENV environment"
          else
            ALERT_TYPE="error"
            TITLE="GitHub Workflow $WORKFLOW Failed"
            TEXT="GitHub workflow $WORKFLOW failed in $ENV environment"
          fi

          # Send event
          curl -X POST "https://api.datadoghq.com/api/v1/events" \
          -H "Content-Type: application/json" \
          -H "DD-API-KEY: $API_KEY" \
          -d @- << EOF
          {
            "title": "$TITLE",
            "text": "$TEXT\n\nRepository: $GITHUB_REPOSITORY\nBranch: $GITHUB_REF_NAME\nRun ID: $GITHUB_RUN_ID\nTriggered by: $GITHUB_ACTOR\nWorkflow URL: https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID",
            "alert_type": "$ALERT_TYPE",
            "source_type_name": "github",
            "tags": [
              "workflow:$WORKFLOW",
              "environment:$ENV",
              "repository:$GITHUB_REPOSITORY",
              "branch:$GITHUB_REF_NAME", 
              "run_id:$GITHUB_RUN_ID",
              "status:$STATUS",
              "triggered_by:$GITHUB_ACTOR"
            ]
          }
          EOF

          # Send metric for monitoring
          METRIC_VALUE=$([ "$STATUS" == "success" ] && echo "1" || echo "0")

          curl -X POST "https://api.datadoghq.com/api/v1/series" \
          -H "Content-Type: application/json" \
          -H "DD-API-KEY: $API_KEY" \
          -d @- << EOF
          {
            "series": [
              {
                "metric": "github.workflow.status",
                "type": "gauge",
                "points": [[$(date +%s), $METRIC_VALUE]],
                "tags": [
                  "workflow:$WORKFLOW",
                  "environment:$ENV",
                  "repository:$GITHUB_REPOSITORY",
                  "branch:$GITHUB_REF_NAME",
                  "triggered_by:$GITHUB_ACTOR"
                ]
              }
            ]
          }
          EOF
