name: TS_Performance
description: "should verify performance of the library in the dev network"

on:
  pull_request:
    branches: [deploy]
  schedule:
    - cron: "30 * * * *" # Runs at 30 minutes past each hour
  workflow_dispatch:

jobs:
  # dev:
  #   runs-on: ubuntu-latest
  #   env:
  #     DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
  #     LOGGING_LEVEL: ${{ vars.LOGGING_LEVEL }}
  #     XMTP_ENV: "dev"
  #     GEOLOCATION: ${{ vars.GEOLOCATION }}
  #     BATCH_SIZE: ${{ vars.BATCH_SIZE }}
  #     MAX_GROUP_SIZE: ${{ vars.MAX_GROUP_SIZE }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version-file: ".node-version"
  #         cache: "yarn"
  #       env:
  #         SKIP_YARN_COREPACK_CHECK: "1"
  #     - run: corepack enable
  #     - run: yarn
  #     - name: Make test script executable
  #       run: chmod +x ./scripts/run-test.sh
  #     - name: Run tests with retry
  #       run: ./scripts/run-test.sh TS_Performance
  #     - name: Rename logs with run ID prefix
  #       run: |
  #         mkdir -p artifacts/logs
  #         cp -r logs/* artifacts/logs/
  #         find artifacts/logs -type f -name "*.log" -exec bash -c 'mv "$0" "${0%.log}.run-${{ github.run_id }}-dev.txt"' {} \;
  #         find artifacts/logs -type f ! -name "*.run-*" -exec bash -c 'mv "$0" "$0.run-${{ github.run_id }}-dev.txt"' {} \;
  #     - name: Rename logs/reports with run ID prefix
  #       run: |
  #         mkdir -p artifacts/reports
  #         cp -r logs/reports/* artifacts/reports/
  #         find artifacts/reports -type f -name "*.md" -exec bash -c 'mv "$0" "${0%.md}.run-${{ github.run_id }}-dev.md"' {} \;
  #         find artifacts/reports -type f ! -name "*.run-*" -exec bash -c 'mv "$0" "$0.run-${{ github.run_id }}-dev.md"' {} \;
  #     - name: Upload all artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ts_performance_${{ env.XMTP_ENV }}
  #         path: artifacts/
  production:
    runs-on: ubuntu-latest
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      LOGGING_LEVEL: ${{ vars.LOGGING_LEVEL }}
      XMTP_ENV: "production"
      GEOLOCATION: ${{ vars.GEOLOCATION }}
      BATCH_SIZE: ${{ vars.BATCH_SIZE }}
      MAX_GROUP_SIZE: ${{ vars.MAX_GROUP_SIZE }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - run: corepack enable
      - run: yarn
      - name: Make test script executable
        run: chmod +x ./scripts/run-test.sh
      - name: Run tests with retry
        run: ./scripts/run-test.sh TS_Performance
      - name: Upload reports artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ts_performance_${{ env.XMTP_ENV }}_reports
          path: logs/
