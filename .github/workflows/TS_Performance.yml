name: TS_Performance
description: "should verify performance of the library in the dev network"

on:
  pull_request:
    branches: [deploy]
  schedule:
    - cron: "30 * * * *" # Runs every 30 minutes
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, production]
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      LOGGING_LEVEL: ${{ vars.LOGGING_LEVEL }}
      XMTP_ENV: ${{ matrix.environment }}
      GEOLOCATION: ${{ vars.GEOLOCATION }}
      BATCH_SIZE: ${{ vars.BATCH_SIZE }}
      MAX_GROUP_SIZE: ${{ vars.MAX_GROUP_SIZE }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - name: Ensure directories exist
        run: |
          mkdir -p .data
          touch .env
      - run: corepack enable
      - run: yarn
      - name: Make test script executable
        run: chmod +x ./scripts/run-test.sh
      - name: Run tests with retry
        id: test
        continue-on-error: true
        run: ./scripts/run-test.sh TS_Performance
      - name: Upload reports artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ts_performance_logs_${{ matrix.environment }}
          path: logs/
          if-no-files-found: warn
      - name: Debug file paths
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in root directory:"
          ls -la
          echo "Data directory exists: $(test -d '.data' && echo 'Yes' || echo 'No')"
          echo "Env file exists: $(test -f '.env' && echo 'Yes' || echo 'No')"
      - name: Check if .env exists
        id: check_env_file
        run: |
          if [ -f ".env" ]; then
            echo "env_exists=true" >> $GITHUB_OUTPUT
          else
            echo "env_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload .env file
        if: always() && steps.check_env_file.outputs.env_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ts_performance_env_${{ matrix.environment }}
          path: .env
          if-no-files-found: warn
      - name: Check if .data directory exists
        id: check_data_dir
        run: |
          if [ -d ".data" ]; then
            echo "data_exists=true" >> $GITHUB_OUTPUT
          else
            echo "data_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload data folder
        if: always() && steps.check_data_dir.outputs.data_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ts_performance_data_${{ matrix.environment }}
          path: .data/
          if-no-files-found: warn
      - name: Fail if tests failed
        if: steps.test.outcome == 'failure'
        run: exit 1
