2025-03-07T16:59:40.623445Z DEBUG stream_all_messages:query_latest_group_message{group_id="b2a9994022857b0a0ba018266acbdcfc"}: xmtp_api::mls: query latest group message group_id="b2a9994022857b0a0ba018266acbdcfc" inbox_id="89e7ed9f4beb1d1224f8bbb9260f56549e1db74478788269e9b3db03eabe11a5"

2025-03-07T16:59:40.623485Z DEBUG stream_all_messages:query_latest_group_message{group_id="0272609ce39da4aae53fca1bb985a582"}: xmtp_api::mls: query latest group message group_id="0272609ce39da4aae53fca1bb985a582" inbox_id="89e7ed9f4beb1d1224f8bbb9260f56549e1db74478788269e9b3db03eabe11a5"

2025-03-07T16:59:40.623499Z DEBUG stream_all_messages:query_latest_group_message{group_id="16075e58ecf44069bfcb0a4489ffcafd"}: xmtp_api::mls: query latest group message group_id="16075e58ecf44069bfcb0a4489ffcafd" inbox_id="89e7ed9f4beb1d1224f8bbb9260f56549e1db74478788269e9b3db03eabe11a5"

2025-03-07T16:59:40.623533Z DEBUG stream_all_messages:query_latest_group_message{group_id="40b8d20941c267ec9b94506659faeca8"}: xmtp_api::mls: query latest group message group_id="40b8d20941c267ec9b94506659faeca8" inbox_id="89e7ed9f4beb1d1224f8bbb9260f56549e1db74478788269e9b3db03eabe11a5"

2025-03-07T16:59:40.623551Z DEBUG stream_all_messages:query_latest_group_message{group_id="b2a9994022857b0a0ba018266acbdcfc"}: tower::buffer::worker: service.ready=true processing request

2025-03-07T16:59:40.623570Z DEBUG stream_all_messages:query_latest_group_message{group_id="0272609ce39da4aae53fca1bb985a582"}: tower::buffer::worker: service.ready=true processing request

2025-03-07T16:59:40.623576Z DEBUG stream_all_messages:query_latest_group_message{group_id="16075e58ecf44069bfcb0a4489ffcafd"}: tower::buffer::worker: service.ready=true processing request

2025-03-07T16:59:40.623582Z DEBUG stream_all_messages:query_latest_group_message{group_id="40b8d20941c267ec9b94506659faeca8"}: tower::buffer::worker: service.ready=true processing request

2025-03-07T16:59:40.623704Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(11), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.623739Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(13), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.623753Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(15), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.623763Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(17), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.623775Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(11) }

2025-03-07T16:59:40.623784Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(13) }

2025-03-07T16:59:40.623787Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(15) }

2025-03-07T16:59:40.623791Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(17) }

2025-03-07T16:59:40.623794Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(11), flags: (0x1: END_STREAM) }

2025-03-07T16:59:40.623798Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(13), flags: (0x1: END_STREAM) }

2025-03-07T16:59:40.623801Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(15), flags: (0x1: END_STREAM) }

2025-03-07T16:59:40.623804Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(17), flags: (0x1: END_STREAM) }

2025-03-07T16:59:40.682073Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 29 }

2025-03-07T16:59:40.682096Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Ping { ack: false, payload: [2, 4, 16, 16, 9, 14, 7, 7] }

2025-03-07T16:59:40.682101Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Ping { ack: true, payload: [2, 4, 16, 16, 9, 14, 7, 7] }

2025-03-07T16:59:40.683164Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(13), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.683185Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(13) }

2025-03-07T16:59:40.683191Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(13), flags: (0x5: END_HEADERS | END_STREAM) }

2025-03-07T16:59:40.683195Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(11), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.683207Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(11) }

2025-03-07T16:59:40.683216Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(11), flags: (0x5: END_HEADERS | END_STREAM) }

2025-03-07T16:59:40.683707Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(15), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.683728Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(15) }

2025-03-07T16:59:40.683733Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(15), flags: (0x5: END_HEADERS | END_STREAM) }

2025-03-07T16:59:40.683737Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(17), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.683745Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(17) }

2025-03-07T16:59:40.683747Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(17), flags: (0x5: END_HEADERS | END_STREAM) }

2025-03-07T16:59:40.683816Z DEBUG stream_all_messages: xmtp_mls::subscriptions::stream_messages: subscribed to group 0xb2a9...dcfc at 267951

2025-03-07T16:59:40.683823Z DEBUG stream_all_messages: xmtp_mls::subscriptions::stream_messages: subscribed to group 0x0272...a582 at 267963

2025-03-07T16:59:40.683825Z DEBUG stream_all_messages: xmtp_mls::subscriptions::stream_messages: subscribed to group 0x1607...cafd at 268007

2025-03-07T16:59:40.683827Z DEBUG stream_all_messages: xmtp_mls::subscriptions::stream_messages: subscribed to group 0x40b8...eca8 at 268060

2025-03-07T16:59:40.683829Z DEBUG stream_all_messages: xmtp_api::mls: subscribing to group messages inbox_id="89e7ed9f4beb1d1224f8bbb9260f56549e1db74478788269e9b3db03eabe11a5"

2025-03-07T16:59:40.683853Z DEBUG stream_all_messages: tower::buffer::worker: service.ready=true processing request

2025-03-07T16:59:40.683900Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(19), flags: (0x4: END_HEADERS) }

2025-03-07T16:59:40.683917Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(19) }

2025-03-07T16:59:40.683924Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(19), flags: (0x1: END_STREAM) }

2025-03-07T16:59:40.742145Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 188 }

2025-03-07T16:59:40.742171Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Ping { ack: false, payload: [2, 4, 16, 16, 9, 14, 7, 7] }

2025-03-07T16:59:40.742177Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_write: send frame=Ping { ack: true, payload: [2, 4, 16, 16, 9, 14, 7, 7] }

2025-03-07T16:59:40.742431Z DEBUG grpc_connect{address="https://grpc.dev.xmtp.network:443";}:Connection{peer=Client}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(19), flags: (0x4: END_HEADERS) }

Mounting volume on: /var/lib/containers/railwayapp/bind-mounts/ec8a911b-db5f-4dae-b2e8-c8124dab195b/vol_qndcbwmznuenqzih

2025-03-07T17:00:03.485498Z DEBUG tonic::transport::channel::service::connection: connection task error: hyper::Error(Io, Custom { kind: BrokenPipe, error: "connection closed because of a broken pipe" })

2025-03-07T17:00:03.485510Z DEBUG tonic::codec::decode: decoder inner stream error: Status { code: Unknown, message: "h2 protocol error: error reading a body from connection", source: Some(hyper::Error(Body, Error { kind: Io(Custom { kind: BrokenPipe, error: "stream closed because of a broken pipe" }) })) }

2025-03-07T17:00:03.485554Z DEBUG xmtp_mls::subscriptions: `stream_all_messages` stream ended, dropping stream

undefined:0

 

 

[Error: endpoint: subscribe_group_messages, source: status: Unknown, message: "h2 protocol error: error reading a body from connection", details: [], metadata: MetadataMap { headers: {} }] {

  code: 'GenericFailure'

}

 

Node.js v22.11.0

error Command failed with exit code 1.

info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.

yarn run v1.22.22

$ node dist/index.js

(node:25) ExperimentalWarning: Importing JSON modules is an experimental feature and might change at any time

(Use `node --trace-warnings ...` to show where the warning was created)

Creating client on the 'dev' network...

Ensured directory exists: /app/data

Using Railway volume path: /app/data

Contents of /app/data: [

  '0x3237451eb4b3Cd648fdcD9c7818C9B64b60e82fA-dev',

  '0x3237451eb4b3Cd648fdcD9c7818C9B64b60e82fA-dev-shm',

  '0x3237451eb4b3Cd648fdcD9c7818C9B64b60e82fA-dev-wal',

  '0x3237451eb4b3Cd648fdcD9c7818C9B64b60e82fA-dev.sqlcipher_salt',

  'lost+found'

]

[Error: API client error: endpoint: get_inbox_ids, source: status: Unknown, message: "transport error", details: [], metadata: MetadataMap { headers: {} }] {

  code: 'GenericFailure'

}